name: Remote Ubuntu
on:
  workflow_dispatch:
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Update and Download Essential Software
        run: | 
          sudo apt-get update -y &> /dev/null
          sudo apt-get upgrade -y
          sudo apt-get install -y ubuntu-desktop xrdp
      - name: Check localtonet TCP
        run: | 
          res=$(curl -s 'GET' 'https://localtonet.com/api/GetTunnels' -H 'accept: application/json' -H 'Authorization: Bearer ${{ secrets.LOCALTONET_API_TOKEN_INFO }}')
          sport=$(echo "$res" | jq -r '.result[0].serverPort')
          sudo echo -e "[Service]\nAuthToken=\"$(echo "$response" | jq -r '.result[0].authToken')\"" > localtonet.conf
          sudo mkdir -p /etc/localtonet/ && sudo mv ./localtonet.conf /etc/localtonet/
          wget -q https://localtonet.com/download/localtonet-linux-x64.zip
          unzip localtonet-linux-x64.zip
          sudo chmod +x ./localtonet
          sudo mv ./localtonet /usr/sbin/
          sudo echo -e "[Unit]\nDescription=Localtonet Service\nAfter=network.target\nStartLimitIntervalSec=5\n\n[Service]\nType=notify\nEnvironmentFile=/etc/localtonet/localtonet.conf\nExecStart=/usr/sbin/localtonet authtoken $AuthToken\nExecReload=/bin/pkill -F /var/run/localtonet.pid\nRestart=on-failure\nRestartSec=42s\n\n[Install]\nWantedBy=multi-user.target" > localtonet.service
          sudo mkdir -p /etc/systemd/system/ && sudo mv ./localtonet.service /etc/systemd/system/
          sudo systemctl start localtonet.service
          while : ; do
            response=$(curl -s 'GET' 'https://localtonet.com/api/GetTunnels' -H 'accept: application/json' -H 'Authorization: Bearer ${{ secrets.LOCALTONET_API_TOKEN_INFO }}')
            cport=$(echo "$response" | jq -r '.result[0].serverPort')
            [[ $cport == $sport ]] || break
          done
          echo "Type $(echo "$response" | jq -r '.result[0].protocolType') => $(echo "$response" | jq -r '.result[0].serverIp'):$(echo "$response" | jq -r '.result[0].serverPort') -> $(echo "$response" | jq -r '.result[0].clientIp'):$(echo "$response" | jq -r '.result[0].clientPort')"
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - name: Running time loop
        run: while :; do sleep 2073600; done
