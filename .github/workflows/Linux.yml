name: Remote Ubuntu
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Update and Download Essential Software
        run: | 
          sudo apt-get update -y && sudo apt-get upgrade -y
          sudo apt-get install -y xorg xterm gdm3 menu synaptic
          sudo apt-get install -y  ubuntu-gnome-desktop
          res=$(curl -s 'GET' 'https://localtonet.com/api/GetTunnelsByAuthToken/${{ secrets.LOCALTONET_AUTH_TOKEN_INFO }}' -H 'accept: application/json' -H 'Authorization: Bearer ${{ secrets.LOCALTONET_API_TOKEN_INFO }}')
          sport=$(echo "$res" | jq -r '.result[0].serverPort')
      - name: Running RDP
        run: | 
          sudo dpkg-reconfigure gdm3
          sudo service gdm3 start
      - name: Check localtonet TCP
        run: | 
          wget -q https://localtonet.com/download/localtonet-linux-x64.zip
          unzip localtonet-linux-x64.zip
          sudo chmod +x ./localtonet
          sudo ./localtonet authtoken ${{ secrets.LOCALTONET_AUTH_TOKEN_INFO }} &
          while : ; do
            response=$(curl -s 'GET' 'https://localtonet.com/api/GetTunnelsByAuthToken/${{ secrets.LOCALTONET_AUTH_TOKEN_INFO }}' -H 'accept: application/json' -H 'Authorization: Bearer ${{ secrets.LOCALTONET_API_TOKEN_INFO }}')
            cport=$(echo "$response" | jq -r '.result[0].serverPort')
            [[ $cport == $sport ]] || break
            sleep .5
          done
          echo "Type $(echo "$response" | jq -r '.result[0].protocolType') => $(echo "$response" | jq -r '.result[0].serverIp'):$(echo "$response" | jq -r '.result[0].serverPort') -> $(echo "$response" | jq -r '.result[0].clientIp'):$(echo "$response" | jq -r '.result[0].clientPort')"
      - name: Running time loop
        run: while :; do sleep 2073600; done
